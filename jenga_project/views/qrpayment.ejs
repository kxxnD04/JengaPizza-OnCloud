<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üçï</text></svg>">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <title>Jenga Pizza</title>
    <style>
        @font-face {
            font-family: Prompt;
            src: url("fonts/Prompt-Regular.ttf");
        }

        body {
            font-family: "Prompt";
        }

        /* Background Image */
        body::before {
            content: "";
            position: fixed;
            width: 100%;
            height: 100%;
            background-image: url("https://t3.ftcdn.net/jpg/04/08/51/78/360_F_408517872_u7m4me8l83eenmUcsJ1ArSZymm5Unz4X.jpg");
            opacity: 0.1;
            z-index: -1;
        }

        .window {
            background-color: rgb(187, 62, 0);
            top: 0;
            bottom: 0;
            position: fixed;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;
        }

        /* Fix Flexbox Centering */
        .container-center {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(100vh - 60px);
            /* Adjust for navbar */
            padding-top: 60px;
            /* Ensure content is not hidden behind navbar */
        }

        .box {
            width: auto;
            padding: 30px;
            text-align: center;
            border-radius: 8px;
        }

        .box .row {
            display: flex;
            align-items: center;
            /* Center items vertically */
        }

        .qr-group {
            width: 500px;
            padding: 20px;
            background-color: white;
            text-align: left;
        }

        .qr-header {
            background-color: rgb(187, 62, 0);
            color: white;
            padding: 10px;
        }

        .qr-code {
            justify-content: center;
        }

        .qr-code img {
            width: 200px;
        }

        .qr-total {
            padding: 20px;
            text-align: center;
            border-top: 1px solid grey;
            color: rgb(187, 62, 0);
            font-weight: bolder;
        }

        .upload-box {
            width: 300px;
            /* Adjust width */
            height: 150px;
            /* Adjust height */
            border: 2px dashed #ccc;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            border-radius: 10px;
            text-align: center;
            transition: 0.3s;
        }

        .upload-box:hover {
            border-color: #000;
        }

        .upload-label {
            display: flex;
            flex-direction: column;
            align-items: center;
            cursor: pointer;
        }

        .upload-icon {
            width: 40px;
            height: 40px;
            opacity: 0.7;
        }

        .upload-text {
            font-size: 16px;
            font-weight: bold;
            color: black;
            margin-top: 5px;
        }

        .btn-red {
            background-color: rgb(187, 62, 0);
            color: white;
        }

        .btn-red:hover {
            background-color: rgb(160, 50, 0);
            color: white;
        }

        .btn-grey {
            background-color: #e2e2e2;
            color: white;
        }

        .btn-grey:hover {
            background-color: #d0d0d0;
            color: white;
        }

        /* Loading Overlay */
        .loading-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 9999;
            justify-content: center;
            align-items: center;
        }

        .loading-content {
            background: white;
            padding: 40px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 4px 20px rgba(0,0,0,0.3);
        }

        .loading-spinner {
            border: 5px solid #f3f3f3;
            border-top: 5px solid rgb(187, 62, 0);
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .loading-text {
            font-family: Prompt;
            font-size: 1.1rem;
            font-weight: bold;
            color: rgb(187, 62, 0);
        }

        /* Error Message */
        .error-message {
            display: none;
            background: #ffebee;
            color: #c62828;
            padding: 12px 20px;
            border-radius: 8px;
            margin-bottom: 15px;
            border-left: 4px solid #f44336;
            font-family: Prompt;
            font-weight: 500;
        }

        /* Success Message */
        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 12px 20px;
            border-radius: 8px;
            margin-bottom: 15px;
            border-left: 4px solid #4caf50;
            font-family: Prompt;
            font-weight: 500;
        }

        /* Preview Controls */
        .preview-controls {
            position: absolute;
            top: 10px;
            right: 10px;
            display: none;
            gap: 5px;
        }

        .upload-box:hover .preview-controls {
            display: flex;
        }

        .preview-controls button {
            background: rgba(0, 0, 0, 0.7);
            border: none;
            color: white;
            padding: 8px 12px;
            border-radius: 50%;
            cursor: pointer;
            transition: background 0.3s;
        }

        .preview-controls button:hover {
            background: rgba(0, 0, 0, 0.9);
        }
    </style>
</head>

<body>
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner"></div>
            <div class="loading-text">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô...</div>
            <p style="color: #6c757d; margin-top: 10px;">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà</p>
        </div>
    </div>

    <header>
        <%- include('header') %>
    </header>

    <!-- choose to buy -->
    <div class="container-center">
        <div class="box">
            <div class="row">
                <div class="col-md-6 d-flex justify-content-center">
                    <div class="qr-group">
                        <div class="qr-header">QR Payment</div>
                        <div class="qr-code d-flex">
                            <img src="<%= S3_BUCKET_URL %>/images/qrcode.jpg">

                        </div>
                        <p style="text-align: center;">‡∏ä‡∏∑‡πà‡∏≠: ‡πÄ‡∏à‡∏á‡∏Å‡πâ‡∏≤‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡∏õ‡∏∞‡∏ô‡∏µ ‡∏à‡∏≥‡∏Å‡∏±‡∏î<br>
                            ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: xxx-xxxx-xxxxx</p>
                        <div class="qr-total">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: <%= total_price %> ‡∏ö‡∏≤‡∏ó</div>
                    </div>
                </div>
                <div class="col-md-6 d-flex flex-column align-items-center">
                    <!-- Error Message -->
                    <div class="error-message" id="errorMessage"></div>
                    
                    <!-- Success Message -->
                    <div class="success-message" id="successMessage"></div>

                    <div class="upload-box mb-3" id="uploadBox" style="position: relative;">
                        <input type="file" id="fileInput" accept="image/jpeg,image/jpg,image/png" hidden>
                        <label for="fileInput" class="upload-label" id="uploadLabel">
                            <img src="https://cdn-icons-png.flaticon.com/512/1829/1829586.png" alt="Upload Icon"
                                class="upload-icon" id="uploadIcon">
                            <p class="upload-text">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</p>
                            <p style="font-size: 0.8rem; color: #6c757d; margin-top: 5px;">
                                ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö JPG, JPEG, PNG (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5MB)
                            </p>
                        </label>
                        <img id="previewImage" src="#" alt="Uploaded Image"
                            style="display: none; width: 100%; height: 100%; object-fit: cover; border-radius: 10px;">
                        
                        <!-- Preview Controls -->
                        <div class="preview-controls" id="previewControls">
                            <button type="button" title="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ" onclick="document.getElementById('fileInput').click()">
                                üîÑ
                            </button>
                            <button type="button" title="‡∏•‡∏ö‡∏£‡∏π‡∏õ" onclick="removeImage()">
                                üóëÔ∏è
                            </button>
                        </div>
                    </div>
                    <div class="button-wrapper d-flex" style="justify-content: center;">
                        <div class="mb-3">
                            <button id="completeBtn" class="btn btn-red" onclick="completeTrans()">‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</button>
                            <button class="btn btn-grey" type="button"
                                onclick="window.location.href='/customerinfo';">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer>
        <%- include('footer') %>
    </footer>

    <script>
        // Show/Hide Messages
        function showMessage(type, message) {
            const errorMsg = document.getElementById('errorMessage');
            const successMsg = document.getElementById('successMessage');
            
            if (type === 'error') {
                errorMsg.textContent = '‚ùå ' + message;
                errorMsg.style.display = 'block';
                successMsg.style.display = 'none';
            } else {
                successMsg.textContent = '‚úÖ ' + message;
                successMsg.style.display = 'block';
                errorMsg.style.display = 'none';
            }

            // Auto hide after 5 seconds
            setTimeout(() => {
                errorMsg.style.display = 'none';
                successMsg.style.display = 'none';
            }, 5000);
        }

        // Validate File
        function validateFile(file) {
            // Check if file exists
            if (!file) {
                showMessage('error', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô');
                return false;
            }

            // Check file type
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                showMessage('error', '‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå JPG, JPEG ‡πÅ‡∏•‡∏∞ PNG ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
                return false;
            }

            // Check file size (max 5MB)
            const maxSize = 5 * 1024 * 1024; // 5MB in bytes
            if (file.size > maxSize) {
                showMessage('error', '‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB (‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ' + (file.size / 1024 / 1024).toFixed(2) + 'MB)');
                return false;
            }

            return true;
        }

        // Handle File Selection
        document.getElementById("fileInput").addEventListener("change", function (event) {
            const file = event.target.files[0];
            
            if (file && validateFile(file)) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("previewImage").src = e.target.result;
                    document.getElementById("previewImage").style.display = "block";
                    document.getElementById("uploadLabel").style.display = "none";
                    document.getElementById("previewControls").style.display = "flex";
                    
                    // Hide messages
                    document.getElementById('errorMessage').style.display = 'none';
                    document.getElementById('successMessage').style.display = 'none';
                };
                reader.readAsDataURL(file);
            } else {
                // Reset file input if validation failed
                event.target.value = '';
            }
        });

        // Remove Image
        function removeImage() {
            document.getElementById('fileInput').value = '';
            document.getElementById('previewImage').style.display = 'none';
            document.getElementById('uploadLabel').style.display = 'flex';
            document.getElementById('previewControls').style.display = 'none';
        }

        // Click on preview to change image
        document.getElementById('previewImage').addEventListener("click", function () {
            document.getElementById('fileInput').click();
        });

        // Complete Transaction
        function completeTrans() {
            const input = document.getElementById('fileInput');
            const target_file = input.files[0];
            const completeBtn = document.getElementById('completeBtn');

            // Validate file
            if (!validateFile(target_file)) {
                return;
            }

            // Disable button and show loading
            completeBtn.disabled = true;
            completeBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î...';
            
            // Show loading overlay
            document.getElementById('loadingOverlay').style.display = 'flex';

            const formData = new FormData();
            formData.append("file", target_file);

            fetch("/complete_order", {
                method: "POST",
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success !== false) {
                        // Success - show success message briefly
                        document.getElementById('loadingOverlay').style.display = 'none';
                        showMessage('success', '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...');
                        
                        setTimeout(() => {
                            window.location.href = data.redirect;
                        }, 1000);
                    } else {
                        throw new Error(data.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ');
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    
                    // Hide loading and show error
                    document.getElementById('loadingOverlay').style.display = 'none';
                    showMessage('error', error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
                    
                    // Re-enable button
                    completeBtn.disabled = false;
                    completeBtn.innerHTML = '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô';
                });
        }

        // Prevent accidental page leave
        window.addEventListener('beforeunload', function (e) {
            const fileInput = document.getElementById('fileInput');
            if (fileInput.files.length > 0) {
                e.preventDefault();
                e.returnValue = '';
            }
        });
    </script>

</body>

</html>