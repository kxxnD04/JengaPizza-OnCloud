<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üçï</text></svg>">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <title>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ - Jenga Pizza</title>
    
    <!-- Set flag to prevent header from loading Bootstrap -->
    <script>
        window.BOOTSTRAP_LOADED = true;
    </script>
    
    <style>
        @font-face {
            font-family: Prompt;
            src: url("/fonts/Prompt-Regular.ttf");
        }

        body {
            font-family: Prompt, sans-serif;
            background-color: #f8f9fa;
        }

        /* Background Image */
        body::before {
            content: "";
            position: fixed;
            width: 100%;
            height: 100%;
            background-image: url("<%= S3_BUCKET_URL %>/images/bg-pizza.jpg");
            opacity: 0.05;
            z-index: -1;
        }

        .user-management-container {
            padding: 80px 20px 40px 20px;
            max-width: 1400px;
            margin: 0 auto;
        }

        .page-title {
            font-size: 2rem;
            font-weight: bold;
            color: rgb(187, 62, 0);
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .btn-add-user {
            background: linear-gradient(90deg, rgb(187, 62, 0), rgb(220, 80, 20));
            color: white;
            border: none;
            padding: 10px 25px;
            border-radius: 8px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .btn-add-user:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(187, 62, 0, 0.3);
        }

        .users-table-card {
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .users-table {
            width: 100%;
            border-collapse: collapse;
            font-family: Prompt, sans-serif;
        }

        .users-table thead {
            background: linear-gradient(90deg, rgb(187, 62, 0), rgb(220, 80, 20));
            color: white;
        }

        .users-table th {
            padding: 15px;
            text-align: left;
            font-weight: bold;
        }

        .users-table td {
            padding: 15px;
            border-bottom: 1px solid #dee2e6;
        }

        .users-table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .privilege-badge {
            display: inline-block;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: bold;
        }

        .privilege-admin {
            background-color: #dc3545;
            color: white;
        }

        .privilege-employee {
            background-color: #007bff;
            color: white;
        }

        .privilege-customer {
            background-color: #28a745;
            color: white;
        }

        .action-btn {
            padding: 5px 12px;
            margin: 0 3px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.2s;
        }

        .btn-edit {
            background-color: #ffc107;
            color: #333;
        }

        .btn-edit:hover {
            background-color: #e0a800;
        }

        .btn-delete {
            background-color: #dc3545;
            color: white;
        }

        .btn-delete:hover {
            background-color: #c82333;
        }

        /* Bootstrap Modal Customization - Scoped to this page only */
        #userModal .modal-content,
        #deleteModal .modal-content {
            border-radius: 10px;
            font-family: Prompt, sans-serif;
        }

        #userModal .modal-header,
        #deleteModal .modal-header {
            background: linear-gradient(90deg, rgb(187, 62, 0), rgb(220, 80, 20));
            color: white;
            border-radius: 10px 10px 0 0;
            border-bottom: none;
        }

        #userModal .modal-header .close,
        #deleteModal .modal-header .close {
            color: white;
            opacity: 1;
            text-shadow: none;
        }

        #userModal .modal-title,
        #deleteModal .modal-title {
            font-weight: bold;
        }

        #userModal .modal-body,
        #deleteModal .modal-body {
            padding: 30px;
        }

        #userModal .modal-footer,
        #deleteModal .modal-footer {
            border-top: none;
            padding: 0 30px 30px 30px;
        }

        #userModal .form-group label {
            font-weight: bold;
            color: #333;
        }

        #userModal .form-control:focus {
            border-color: rgb(187, 62, 0);
            box-shadow: 0 0 0 0.2rem rgba(187, 62, 0, 0.25);
        }

        #userModal .btn-primary,
        #deleteModal .btn-danger {
            background: linear-gradient(90deg, rgb(187, 62, 0), rgb(220, 80, 20));
            border: none;
        }

        #userModal .btn-primary:hover {
            background: linear-gradient(90deg, rgb(160, 50, 0), rgb(187, 62, 0));
        }

        #deleteModal .modal-header {
            background: linear-gradient(90deg, #dc3545, #c82333) !important;
        }

        .user-management-container .alert {
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .loading-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            justify-content: center;
            align-items: center;
        }

        .loading-spinner {
            border: 5px solid #f3f3f3;
            border-top: 5px solid rgb(187, 62, 0);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .users-table {
                font-size: 0.85rem;
            }

            .page-title {
                flex-direction: column;
                align-items: flex-start;
            }

            .btn-add-user {
                margin-top: 10px;
            }
        }
    </style>
</head>
<body>

    <!-- Set flag to prevent header from loading Bootstrap -->
    <script>
        window.BOOTSTRAP_LOADED = true;
    </script>

    <header>
        <%- include('header') %>
    </header>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <div class="user-management-container">
        <div class="page-title">
            <span>üë• ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</span>
            <button class="btn-add-user" onclick="openAddUserModal()">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</button>
        </div>

        <!-- Alert Messages -->
        <div id="alertContainer"></div>

        <!-- Users Table -->
        <div class="users-table-card">
            <table class="users-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</th>
                        <th>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</th>
                        <th>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</th>
                        <th style="text-align: center;">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                    </tr>
                </thead>
                <tbody id="usersTableBody">
                    <tr>
                        <td colspan="5" style="text-align: center; padding: 40px;">
                            <div class="loading-spinner" style="margin: 0 auto;"></div>
                            <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Add/Edit User Modal -->
    <div class="modal fade" id="userModal" tabindex="-1" role="dialog" aria-labelledby="userModalLabel">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userModalTitle">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="userForm">
                        <input type="hidden" id="userId" name="user_id">
                        <input type="hidden" id="formMode" value="create">

                        <div class="form-group">
                            <label for="adminUsername">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ *</label>
                            <input type="text" class="form-control" id="adminUsername" name="username" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" autocomplete="username" required>
                        </div>

                        <div class="form-group">
                            <label for="adminEmail">‡∏≠‡∏µ‡πÄ‡∏°‡∏• *</label>
                            <input type="email" class="form-control" id="adminEmail" name="email" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•" autocomplete="email" required>
                        </div>

                        <div class="form-group">
                            <label for="adminPassword">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô <span id="passwordHint" style="font-weight: normal; color: #6c757d;">(‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 5 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) *</span></label>
                            <input type="password" class="form-control" id="adminPassword" name="password" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" autocomplete="new-password">
                        </div>

                        <div class="form-group">
                            <label for="userPrivilege">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå *</label>
                            <select class="form-control" id="userPrivilege" name="user_privilege" required>
                                <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå --</option>
                                <option value="customer">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (Customer)</option>
                                <option value="employee">‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô (Employee)</option>
                                <option value="admin">‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö (Admin)</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="submitUserForm()">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ <strong id="deleteUsername"></strong>?</p>
                    <p style="color: #dc3545; margin-top: 15px; margin-bottom: 0;">‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ!</p>
                    <input type="hidden" id="deleteUserId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="confirmDeleteUser()">‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</button>
                </div>
            </div>
        </div>
    </div>

    <footer>
        <%- include('footer') %>
    </footer>

    <script>
        // Load users when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadUsers();
        });

        // Load all users
        function loadUsers() {
            fetch('/api/users')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        displayUsers(data.users);
                    } else {
                        showAlert('danger', data.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('danger', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
                });
        }

        // Display users in table
        function displayUsers(users) {
            const tbody = document.getElementById('usersTableBody');
            
            if (users.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5" style="text-align: center; padding: 40px;">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</td></tr>';
                return;
            }

            tbody.innerHTML = users.map(user => `
                <tr>
                    <td>${user.user_id}</td>
                    <td>${user.username}</td>
                    <td>${user.user_email}</td>
                    <td>
                        <span class="privilege-badge privilege-${user.user_privilege}">
                            ${getPrivilegeLabel(user.user_privilege)}
                        </span>
                    </td>
                    <td style="text-align: center;">
                        <button class="action-btn btn-edit" onclick="openEditUserModal(${user.user_id}, '${user.username}', '${user.user_email}', '${user.user_privilege}')">
                            ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                        </button>
                        <button class="action-btn btn-delete" onclick="openDeleteModal(${user.user_id}, '${user.username}')">
                            üóëÔ∏è ‡∏•‡∏ö
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // Get privilege label in Thai
        function getPrivilegeLabel(privilege) {
            const labels = {
                'admin': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö',
                'employee': '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
                'customer': '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'
            };
            return labels[privilege] || privilege;
        }

        // Open Add User Modal
        function openAddUserModal() {
            document.getElementById('userModalTitle').textContent = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà';
            document.getElementById('formMode').value = 'create';
            document.getElementById('userForm').reset();
            document.getElementById('userId').value = '';
            document.getElementById('adminPassword').required = true;
            document.getElementById('passwordHint').innerHTML = '(‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 5 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) *';
            $('#userModal').modal('show');
        }

        // Open Edit User Modal
        function openEditUserModal(userId, username, email, privilege) {
            document.getElementById('userModalTitle').textContent = '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ';
            document.getElementById('formMode').value = 'edit';
            document.getElementById('userId').value = userId;
            document.getElementById('adminUsername').value = username;
            document.getElementById('adminEmail').value = email;
            document.getElementById('adminPassword').value = '';
            document.getElementById('adminPassword').required = false;
            document.getElementById('passwordHint').innerHTML = '(‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)';
            document.getElementById('userPrivilege').value = privilege;
            $('#userModal').modal('show');
        }

        // Submit User Form (Create or Update)
        function submitUserForm() {
            const formMode = document.getElementById('formMode').value;
            const userId = document.getElementById('userId').value;
            const username = document.getElementById('adminUsername').value;
            const email = document.getElementById('adminEmail').value;
            const password = document.getElementById('adminPassword').value;
            const userPrivilege = document.getElementById('userPrivilege').value;

            // Validation
            if (!username || !email || !userPrivilege) {
                showAlert('warning', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
                return;
            }

            if (formMode === 'create' && !password) {
                showAlert('warning', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô');
                return;
            }

            if (password && password.length < 5) {
                showAlert('warning', '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 5 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
                return;
            }

            const url = formMode === 'create' ? '/admin/create-user' : '/admin/update-user';
            const method = formMode === 'create' ? 'POST' : 'PUT';
            const data = formMode === 'create' 
                ? { username, email, password, user_privilege: userPrivilege }
                : { user_id: userId, username, email, password, user_privilege: userPrivilege };

            showLoading(true);

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                showLoading(false);
                if (data.success) {
                    $('#userModal').modal('hide');
                    showAlert('success', data.message);
                    loadUsers(); // Reload table
                } else {
                    showAlert('danger', data.message);
                }
            })
            .catch(error => {
                showLoading(false);
                console.error('Error:', error);
                showAlert('danger', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
            });
        }

        // Open Delete Confirmation Modal
        function openDeleteModal(userId, username) {
            document.getElementById('deleteUserId').value = userId;
            document.getElementById('deleteUsername').textContent = username;
            $('#deleteModal').modal('show');
        }

        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î Modal (‡∏õ‡∏∏‡πà‡∏° X)
        $('#userModal').on('hidden.bs.modal', function () {
            // Reset form when modal is closed
            document.getElementById('userForm').reset();
        });

        $('#deleteModal').on('hidden.bs.modal', function () {
            // Clear values when modal is closed
            document.getElementById('deleteUserId').value = '';
            document.getElementById('deleteUsername').textContent = '';
        });

        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏Å‡∏ö‡∏≤‡∏ó (X) ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î Modal ‡πÑ‡∏î‡πâ
        $('#userModal .close').on('click', function() {
            $('#userModal').modal('hide');
        });

        $('#deleteModal .close').on('click', function() {
            $('#deleteModal').modal('hide');
        });

        // ‡∏õ‡∏¥‡∏î Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å Modal
        $(document).on('click', '.modal', function(e) {
            if ($(e.target).hasClass('modal')) {
                $(this).modal('hide');
            }
        });

        // Confirm Delete User
        function confirmDeleteUser() {
            const userId = document.getElementById('deleteUserId').value;

            showLoading(true);

            fetch('/admin/delete-user', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ user_id: userId })
            })
            .then(response => response.json())
            .then(data => {
                showLoading(false);
                $('#deleteModal').modal('hide');
                if (data.success) {
                    showAlert('success', data.message);
                    loadUsers(); // Reload table
                } else {
                    showAlert('danger', data.message);
                }
            })
            .catch(error => {
                showLoading(false);
                console.error('Error:', error);
                showAlert('danger', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
            });
        }

        // Show Alert Message
        function showAlert(type, message) {
            const alertContainer = document.getElementById('alertContainer');
            
            // Map alert types to Bootstrap classes
            const alertClass = {
                'success': 'alert-success',
                'danger': 'alert-danger',
                'warning': 'alert-warning',
                'info': 'alert-info'
            };
            
            const alertHtml = `
                <div class="alert ${alertClass[type] || 'alert-info'} alert-dismissible fade show" role="alert">
                    <strong>${message}</strong>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            `;
            alertContainer.innerHTML = alertHtml;

            // Auto dismiss after 5 seconds
            setTimeout(() => {
                $('.alert').alert('close');
            }, 5000);
        }

        // Show/Hide Loading Overlay
        function showLoading(show) {
            const overlay = document.getElementById('loadingOverlay');
            overlay.style.display = show ? 'flex' : 'none';
        }
    </script>

</body>
</html>
